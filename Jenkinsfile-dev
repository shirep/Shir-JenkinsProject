pipeline {
    agent any

    environment {
        DOCKERHUB_CREDENTIALS= credentials('dockerhub')
        GIT_CREDENTIALS = credentials('git-credentials-id')
        }

    stages {
        stage('Checkout') {
            steps {
                script {
                	checkout scm
                }
            }
        }
        stage('Docker Build Shir Python Image') {
            steps {
                script {
                    sh 'docker build -t shir-python-image:$BUILD_NUMBER .'
                    echo 'Build Completed' 
                }
            }
        }

        stage('Login to Docker Hub') {         
            steps{
		        script {
		            sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'                 
	                echo 'Login Completed'                
                }           
            } 
        }  

        stage('Push Image to Docker Hub') {         
            steps{
		        script {
		            sh 'docker tag shir-python-image:$BUILD_NUMBER shirep/shir-python-image:$BUILD_NUMBER'
                    sh 'docker push shirep/shir-python-image:$BUILD_NUMBER'               
                    echo 'Push Image Completed'        
                }           
            } 
        }

        stage('Docker Run') {  
            steps{
		        script {
                    sh 'docker run -itd --name shir-container-$BUILD_NUMBER shirep/shir-python-image:$BUILD_NUMBER'
                }
            }
        }

        stage('Merge Dev to Main') {  
            steps{
		        script {
				            sh 'git remote set-url origin git@github.com:shirep/Shir-JenkinsProject.git'
            env.GIT_SSH_COMMAND = 'ssh -o StrictHostKeyChecking=no'
            withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'git-credentials-id', usernameVariable: 'GIT_USERNAME', passwordVariable: 'GIT_PASSWORD']]) {
                sh '''
                    git config --global user.email "shirepshtein1@gmail.com"
                    git config --global user.name "shirep"
                    git checkout main
                    git merge origin/dev
                    git tag -a v1.0.$BUILD_NUMBER -m "Release version 1.0.$BUILD_NUMBER"
                    git push origin main --tags
                '''
                    	}
                    }
                }
            }
        }
    

    post {
        always {  
            sh 'docker logout'           
        } 
        success {
            echo 'Success'
        }
        failure {
            echo 'Failed'
        }
    }
}
